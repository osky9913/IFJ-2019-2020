.IFJcode19
JUMP $$main

#-----------------------------
#substr(s, i, n)
LABEL !substr
PUSHFRAME
DEFVAR LF@%%return_value
MOVE LF@%%return_value string@
DEFVAR LF@str_len
DEFVAR LF@passed_type 	#premenna na ulozenie typu hodnoty v prvom argumente
TYPE LF@passed_type LF@%param1
JUMPIFNEQ %substr_wrong_type LF@passed_type string@string	#arg1 je to typ string?

TYPE LF@passed_type LF@%param2
JUMPIFNEQ %substr_wrong_type LF@passed_type string@int	#arg1 je to typ string?

TYPE LF@passed_type LF@%param3
JUMPIFNEQ %substr_wrong_type LF@passed_type string@int	#arg1 je to typ string?

LABEL &substr&continue3
DEFVAR LF@arg3_test
LT LF@arg3_test LF@%param3 int@0
JUMPIFEQ &substr&continue4 LF@arg3_test bool@false 	#arg3 >= 0?
MOVE LF@%%return_value string@None		#nieje int -> koniec
JUMP &substr&end

LABEL &substr&continue4
DEFVAR LF@final_str_len
STRLEN LF@str_len LF@%param1
SUB LF@final_str_len LF@str_len LF@%param2					#len(s)‚àíùëñ
SUB LF@str_len LF@str_len int@1
DEFVAR LF@cond_up_length
DEFVAR LF@cond_down_length
DEFVAR LF@cond_final
LT LF@cond_up_length LF@%param2 LF@str_len 					# i < strlen-1
GT LF@cond_down_length LF@%param2 int@-1						# i > -1
AND LF@cond_final LF@cond_up_length LF@cond_down_length		#(i < strlen-1 && i > -1)
JUMPIFEQ &substr&continue5 LF@cond_final bool@true 
MOVE LF@%%return_value string@None
JUMP &substr&end

LABEL &substr&continue5
DEFVAR LF@actual_char
DEFVAR LF@cond_str_len
DEFVAR LF@last_index
LT LF@cond_str_len LF@final_str_len LF@%param3
JUMPIFEQ &substr&continue6 LF@cond_str_len bool@true		# len(s)‚àíùëñ < n
#velkost pozadovaneho stringu je mensia ako pocet zostavajucich charakterov, len(s)‚àíùëñ > n
ADD LF@last_index LF@%param2 LF@%param3								#cyklim po index [i + n]
JUMP &substr&cycle1
LABEL &substr&continue6
ADD LF@str_len LF@str_len int@1
MOVE LF@last_index LF@str_len

LABEL &substr&cycle1
JUMPIFEQ &substr&end LF@last_index LF@%param2
GETCHAR LF@actual_char LF@%param1 LF@%param2							#chcem char z LF@%param1[i]
CONCAT LF@%%return_value LF@%%return_value LF@actual_char
ADD LF@%param2 LF@%param2 int@1											#inkrementujem i++(LF@%param2++)
JUMP &substr&cycle1

#velkost pozadovaneho stringu je vacsie ako pocet zostavajucich charakterov, len(s)‚àíùëñ > n

LABEL &substr&end
POPFRAME
RETURN

LABEL %substr_wrong_type
EXIT int@4

#-----------------------------

LABEL $$main # main body
CREATEFRAME		#----no main-body vars
PUSHFRAME
DEFVAR LF@y
CREATEFRAME		#----
DEFVAR TF@%param1
MOVE TF@%param1 string@
DEFVAR TF@%param2
MOVE TF@%param2 string@0
DEFVAR TF@%param3
MOVE TF@%param3 int@0
CALL !substr
MOVE LF@y TF@%%return_value
WRITE LF@y
EXIT int@0
# end of main body
